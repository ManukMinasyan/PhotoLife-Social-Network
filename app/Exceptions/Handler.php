<?php

namespace App\Exceptions;

use Illuminate\Auth\AuthenticationException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\Exceptions\ThrottleRequestsException;
use Illuminate\Validation\ValidationException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function report(Throwable $exception)
    {
//        if (app()->bound('sentry') && $this->shouldReport($exception)) {
//            app('sentry')->captureException($exception);
//        }

        parent::report($exception);
    }

    protected function unauthenticated($request, AuthenticationException $exception)
    {
        if ($request->inertia()) {
            return inertia()->location(route('login'));
        }

        return parent::unauthenticated($request, $exception); // TODO: Change the autogenerated stub
    }

    public function render($request, Throwable $e)
    {
//        if ($e instanceof ThrottleRequestsException) {
//            throw ValidationException::withMessages([
//                'email' => trans('auth.throttle', [
//                    'seconds' => $e->,
//                    'minutes' => ceil(1 / 60),
//                ]),
//            ]);
//        }

        $response = parent::render($request, $e);

        if ($response->status() === 419) {
            return back()->with([
                'message' => 'The page expired, please try again.',
            ]);
        }

        return $response;
    }
}
